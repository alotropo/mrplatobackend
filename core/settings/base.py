"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 4.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
from datetime import timedelta
import dj_database_url

import environ
import os


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent


env = environ.Env()
environ.Env.read_env()


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-gh%me@7vu=eo_xfuz5&x4ik&g#h8_x^bo&zmb4#1=4k97*im52'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    #commom
    "rest_framework",
    "api",
    "corsheaders",
    'storages',
    # "channels",
    "ckeditor",
    #mrplatofixed,
    "exercises",
    "notification",
    "content",
    "games",
    "config",
    #mrplatoflexible
    'djoser',
    'rest_framework_simplejwt',
    'rest_framework_simplejwt.token_blacklist',
    "users",
    "community",
    "channels",
    "tournamment",    
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    "whitenoise.middleware.WhiteNoiseMiddleware",
    'django.contrib.sessions.middleware.SessionMiddleware',
    "corsheaders.middleware.CorsMiddleware",
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / "frontend"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'


# Database


# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

# DATABASE_URL=$(heroku config:get DATABASE_URL -a your-app) your_process


# DATABASES = {
#     'default':{},
#     'mrplatofixed': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': "d5anafbuqk85l2",
#         'USER': "efinpnnqyhcdxb",
#         'PASSWORD':"90ec14368127311a2704abf279f1a837693a15406b0c003b7e8933f36bc79780",
#         'HOST':"ec2-34-235-198-25.compute-1.amazonaws.com",
#         # 'PORT':5432
#     },
    
#     'mrplatoflexible': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': "d4t3mrj2rnifmt",
#         'USER': "jaexbuacdraali",
#         'PASSWORD':"ded3c595f555c5355bab042695067e95d5c35c4d97e11b2f7a00ab7114eebadb",
#         'HOST':"ec2-34-235-198-25.compute-1.amazonaws.com",
#         # 'PORT':54320
#     }
# }



# DATABASES = {
#     'default':{},
#     'mrplatofixed': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': "mrplatofixed",
#         'USER': "postgres",
#         'PASSWORD':"postgres",
#         'HOST':"db",
#         # 'PORT':5432
#     },
    
#     'mrplatoflexible': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': "mrplatoflexible",
#         'USER': "postgres",
#         'PASSWORD':"postgres",
#         'HOST':"db",
#         # 'PORT':54320
#     }
# }

DATABASES = {
    'default':{},
    'mrplatofixed': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': "mrplatofixed",
        'USER': "postgres",
        'PASSWORD':"123",
        'HOST':"localhost",
        'PORT':5432
    },
    
    'mrplatoflexible': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': "mrplatoflexible",
        'USER': "postgres",
        'PASSWORD':"123",
        'HOST':"localhost",
        'PORT':5432
    }
}






# DATABASES = {
#     'default':{},
#     'mrplatoflexible': dj_database_url.config(default=env("DATABASE_URL")),
#     'mrplatofixed': dj_database_url.config(default=env("HEROKU_POSTGRESQL_COPPER_URL")),
# }




# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]



LANGUAGE_CODE = 'pt-br'
TIME_ZONE = 'America/Sao_Paulo'
USE_I18N = True
USE_TZ = True

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_HOST = env("EMAIL_HOST")
EMAIL_HOST = "mrplatoplatform@gmail.com"
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = "mrplato" 
# EMAIL_HOST_USER = env("EMAIL_HOST_USER") 
EMAIL_HOST_PASSWORD = "azsxdcfvgbG!" 
# EMAIL_HOST_PASSWORD = env("EMAIL_HOST_PASSWORD") 

# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/




# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = BASE_DIR / "staticfiles"
STATICFILES_DIRS = [BASE_DIR / "frontend/static"]
STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"


MEDIA_URL = "/media/"
MEDIA_ROOT = BASE_DIR / "media"

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

DATABASE_ROUTERS = ['routers.mrplatodb.FlexibleRouter','routers.mrplatodb.FixedRouter']


REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        # 'rest_framework.permissions.IsAuthenticated'
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ],
}


SIMPLE_JWT = {
    'AUTH_HEADER_TYPES': ('JWT',),
    'ACCESS_TOKEN_LIFETIME': timedelta(weeks=2),
    'REFRESH_TOKEN_LIFETIME': timedelta(weeks=2),
    'AUTH_TOKEN_CLASSES': (
        'rest_framework_simplejwt.tokens.AccessToken',
    ),
}


DJOSER = {
    'LOGIN_FIELD': 'email',
    'SEND_CONFIRMATION_EMAIL': True,
    'ACTIVATION_URL': 'activate/{uid}/{token}',
    'SEND_ACTIVATION_EMAIL': True,
    'SERIALIZERS': {
        'user_create': 'users.serializers.UserCreateSerializer',
        'user': 'users.serializers.UserCreateSerializer',
        'current_user': 'users.serializers.UserCreateSerializer',
        'user_delete': 'djoser.serializers.UserDeleteSerializer',
    }
}


AUTH_USER_MODEL = 'users.UserAccount'


AUTHENTICATION_BACKENDS = (
    ['django.contrib.auth.backends.ModelBackend']
)


CORS_ORIGIN_ALLOW_ALL = True

CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",
    "http://127.0.0.1:8000",
    "https://questionx.herokuapp.com",
    
]



AWS_ACCESS_KEY_ID="AKIA5XODLY3JNVJ2VMU5"
AWS_SECRET_ACCESS_KEY="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"
AWS_STORAGE_BUCKET_NAME="mrplato"


AWS_S3_FILE_OVERWRITE = False
AWS_DEFAULT_ACL = None
DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'



ASGI_APPLICATION = "core.asgi.application"#routing.py will handle the ASGI
CHANNEL_LAYERS = {
    'default': {
        'BACKEND': "channels.layers.InMemoryChannelLayer"
        }
    }